// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:2.0.0.0
//      Reqnroll Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace iHaul.Features
{
    using Reqnroll;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("SignupAsHauler")]
    public partial class SignupAsHaulerFeature
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "SignupAsHauler.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual async System.Threading.Tasks.Task FeatureSetupAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly();
            global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "SignupAsHauler", "A short summary of the feature", global::Reqnroll.ProgrammingLanguage.CSharp, featureTags);
            await testRunner.OnFeatureStartAsync(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual async System.Threading.Tasks.Task FeatureTearDownAsync()
        {
            await testRunner.OnFeatureEndAsync();
            global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public async System.Threading.Tasks.Task TestInitializeAsync()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public async System.Threading.Tasks.Task TestTearDownAsync()
        {
            await testRunner.OnScenarioEndAsync();
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public async System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Signup as hauler and verify")]
        [NUnit.Framework.CategoryAttribute("tag1")]
        [NUnit.Framework.TestCaseAttribute("Welcome to i-Haul!", "Verify Both Email & Mobile Phone", "123456", "Verification Successful", "Testing", "Alabama", "Testing", "35004", "Set Up Profile", "AL", "Moody", "AL", "Ford", "f-150", "Excellent", "20", "10", "12", "ABC123", "123456", null)]
        public async System.Threading.Tasks.Task SignupAsHaulerAndVerify(
                    string welcomeText, 
                    string verifyBothEmailAndMobilePhone, 
                    string _6_Digit, 
                    string verificationSuccessful, 
                    string aboutText, 
                    string addressline1, 
                    string addressline2, 
                    string zipcode, 
                    string setupProfile, 
                    string state, 
                    string city, 
                    string dLIssuedBy, 
                    string make, 
                    string model, 
                    string condition, 
                    string lenght, 
                    string width, 
                    string height, 
                    string licensePlate, 
                    string password, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "tag1"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("welcome text", welcomeText);
            argumentsOfScenario.Add("verify both email and mobile phone", verifyBothEmailAndMobilePhone);
            argumentsOfScenario.Add("6-digit", _6_Digit);
            argumentsOfScenario.Add("verification successful", verificationSuccessful);
            argumentsOfScenario.Add("about text", aboutText);
            argumentsOfScenario.Add("addressline1", addressline1);
            argumentsOfScenario.Add("addressline2", addressline2);
            argumentsOfScenario.Add("zipcode", zipcode);
            argumentsOfScenario.Add("setup profile", setupProfile);
            argumentsOfScenario.Add("state", state);
            argumentsOfScenario.Add("city", city);
            argumentsOfScenario.Add("DL issued by", dLIssuedBy);
            argumentsOfScenario.Add("make", make);
            argumentsOfScenario.Add("model", model);
            argumentsOfScenario.Add("condition", condition);
            argumentsOfScenario.Add("lenght", lenght);
            argumentsOfScenario.Add("width", width);
            argumentsOfScenario.Add("height", height);
            argumentsOfScenario.Add("license plate", licensePlate);
            argumentsOfScenario.Add("password", password);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Signup as hauler and verify", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 7
 await testRunner.WhenAsync("click on skip button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 8
 await testRunner.ThenAsync(string.Format("verify that \"{0}\" is displayed", welcomeText), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 9
 await testRunner.WhenAsync("enter the mobile number", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 10
 await testRunner.WhenAsync("click on continue button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 11
 await testRunner.WhenAsync("select role as Hauler", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 12
 await testRunner.WhenAsync("click on continue button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 13
 await testRunner.WhenAsync("click on upload photo", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 14
 await testRunner.WhenAsync("click on upload from gallery", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 15
 await testRunner.WhenAsync("click on elipsis", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 16
 await testRunner.WhenAsync("click on browse", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 17
 await testRunner.WhenAsync("click on roots", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 18
 await testRunner.WhenAsync("click on downloads", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 19
 await testRunner.WhenAsync("click on first image", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 20
 await testRunner.WhenAsync("click on crop", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 21
 await testRunner.WhenAsync("enter first name", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 22
 await testRunner.WhenAsync("enter last name", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 23
 await testRunner.WhenAsync("enter email", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 24
 await testRunner.WhenAsync("enter date of birth", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 25
 await testRunner.WhenAsync("select gender", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 26
 await testRunner.WhenAsync(string.Format("enter create password \"{0}\"", password), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 27
 await testRunner.WhenAsync(string.Format("enter confirm passowrd \"{0}\"", password), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 28
 await testRunner.WhenAsync("accept terms and privacy policy", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 29
 await testRunner.WhenAsync("click on signup button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 30
 await testRunner.WhenAsync(string.Format("enter the \"{0}\" code sent to your mobile number", _6_Digit), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 31
 await testRunner.WhenAsync("enter the code sent to your email", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 32
 await testRunner.WhenAsync("click on verify button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 33
 await testRunner.ThenAsync(string.Format("verify \"{0}\" message", verificationSuccessful), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 34
 await testRunner.WhenAsync("click on OK", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 39
 await testRunner.ThenAsync("verify page is displayed", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 40
 await testRunner.WhenAsync("enter social security number", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 41
 await testRunner.WhenAsync(string.Format("enter about \"{0}\"", aboutText), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 42
 await testRunner.WhenAsync(string.Format("enter addressline1 \"{0}\"", addressline1), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 43
 await testRunner.WhenAsync(string.Format("enter addressline2 \"{0}\"", addressline2), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 44
 await testRunner.WhenAsync(string.Format("enter zipcode \"{0}\"", zipcode), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 45
 await testRunner.WhenAsync(string.Format("enter State \"{0}\"", state), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 46
 await testRunner.WhenAsync("select state", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 47
 await testRunner.WhenAsync(string.Format("enter city \"{0}\"", city), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 48
 await testRunner.WhenAsync("click on save and next", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 49
 await testRunner.WhenAsync(string.Format("enter DL issued by \"{0}\"", dLIssuedBy), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 50
 await testRunner.WhenAsync("select DL issued by", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 51
 await testRunner.WhenAsync("enter DL number", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 52
 await testRunner.WhenAsync("click on dl expiry date field", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 53
 await testRunner.WhenAsync("enter DL expiry date", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 54
 await testRunner.WhenAsync("click on upload DL copy", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 55
 await testRunner.WhenAsync("click on upload from gallery", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 56
 await testRunner.WhenAsync("click on roots", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 57
 await testRunner.WhenAsync("click on downloads", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 58
 await testRunner.WhenAsync("click on first image", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 59
 await testRunner.WhenAsync("click on crop", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 60
 await testRunner.WhenAsync("click on save and next", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 61
 await testRunner.WhenAsync(string.Format("enter make \"{0}\"", make), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 62
 await testRunner.WhenAsync(string.Format("enter model \"{0}\"", model), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 63
 await testRunner.WhenAsync("enter year \"<year>\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 64
 await testRunner.WhenAsync("enter type \"<type>\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 65
 await testRunner.WhenAsync("enter current miles \"<current miles>\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 66
 await testRunner.WhenAsync("click on select condition dropdown", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 67
 await testRunner.WhenAsync(string.Format("select condition \"{0}\"", condition), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 68
 await testRunner.WhenAsync("enter cargo capacity", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 69
 await testRunner.WhenAsync(string.Format("enter vehicle lenght \"{0}\"", lenght), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 70
 await testRunner.WhenAsync(string.Format("enter vehicle width \"{0}\"", width), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 71
 await testRunner.WhenAsync(string.Format("enter vehicle height \"{0}\"", height), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 72
 await testRunner.WhenAsync(string.Format("enter license plate \"{0}\"", licensePlate), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 73
 await testRunner.WhenAsync("click registered state dropdown", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 74
 await testRunner.WhenAsync(string.Format("select registered state \"{0}\"", state), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 75
 await testRunner.WhenAsync("click on upload registration field", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 76
 await testRunner.WhenAsync("click on choose from files", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 77
 await testRunner.WhenAsync("click on roots", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 78
 await testRunner.WhenAsync("click on downloads", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 79
 await testRunner.WhenAsync("select the vehicle registration", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 80
 await testRunner.WhenAsync("click on upload insurance field", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 81
 await testRunner.WhenAsync("click on choose from files", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 82
 await testRunner.WhenAsync("click on roots", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 83
 await testRunner.WhenAsync("click on downloads", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 84
 await testRunner.WhenAsync("selec the insurance", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 85
 await testRunner.WhenAsync("click on pictures button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 86
 await testRunner.WhenAsync("click on upload from gallery", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 87
 await testRunner.WhenAsync("click on elipsis", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 88
 await testRunner.WhenAsync("click on browse", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 89
 await testRunner.WhenAsync("click on roots", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 90
 await testRunner.WhenAsync("click on downloads", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 91
 await testRunner.WhenAsync("select images to upload", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 92
 await testRunner.WhenAsync("click on save and next", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
    }
}
#pragma warning restore
#endregion
