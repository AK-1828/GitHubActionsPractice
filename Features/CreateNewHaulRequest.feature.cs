// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:2.0.0.0
//      Reqnroll Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace iHaul.Features
{
    using Reqnroll;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CreateNewHaulRequest")]
    public partial class CreateNewHaulRequestFeature
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CreateNewHaulRequest.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual async System.Threading.Tasks.Task FeatureSetupAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly();
            global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "CreateNewHaulRequest", null, global::Reqnroll.ProgrammingLanguage.CSharp, featureTags);
            await testRunner.OnFeatureStartAsync(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual async System.Threading.Tasks.Task FeatureTearDownAsync()
        {
            await testRunner.OnFeatureEndAsync();
            global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public async System.Threading.Tasks.Task TestInitializeAsync()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public async System.Threading.Tasks.Task TestTearDownAsync()
        {
            await testRunner.OnScenarioEndAsync();
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public async System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        public virtual async System.Threading.Tasks.Task FeatureBackgroundAsync()
        {
#line 3
#line hidden
#line 4
 await testRunner.GivenAsync("click on the next button", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 5
 await testRunner.WhenAsync("enter the mobile number \"akqa1828@gmail.com\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 6
 await testRunner.WhenAsync("click on continue button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 7
    await testRunner.WhenAsync("enter the code", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 8
 await testRunner.WhenAsync("click on ok button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create new haul request and verify")]
        [NUnit.Framework.TestCaseAttribute("6342 Willow St, Houston, TX 77063", "2795 Chestnut Place, Houston, TX 77041", "Testing", "Testing the Haul Details", "15", "Home", "Anji", "11", "12", "13", "7596555555555", "35004", "29", "3", "anji", "Anjaneyulu", "5555555555554444", "10/26", "123", null)]
        public async System.Threading.Tasks.Task CreateNewHaulRequestAndVerify(
                    string pickupAddress, 
                    string dropoffAddress, 
                    string describeItems, 
                    string additionalInfo, 
                    string numberOfFloors, 
                    string addressAs, 
                    string contactName, 
                    string buildingNumber, 
                    string apartmentNumber, 
                    string floorNumber, 
                    string contactNumber, 
                    string zipcode, 
                    string date, 
                    string byInDays, 
                    string nickName, 
                    string cardHolderName, 
                    string cardNumber, 
                    string validThru, 
                    string cvv, 
                    string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("pickup address", pickupAddress);
            argumentsOfScenario.Add("dropoff address", dropoffAddress);
            argumentsOfScenario.Add("describeItems", describeItems);
            argumentsOfScenario.Add("additional info", additionalInfo);
            argumentsOfScenario.Add("number of floors", numberOfFloors);
            argumentsOfScenario.Add("address as", addressAs);
            argumentsOfScenario.Add("contact name", contactName);
            argumentsOfScenario.Add("building number", buildingNumber);
            argumentsOfScenario.Add("apartment number", apartmentNumber);
            argumentsOfScenario.Add("floor number", floorNumber);
            argumentsOfScenario.Add("contact number", contactNumber);
            argumentsOfScenario.Add("zipcode", zipcode);
            argumentsOfScenario.Add("date", date);
            argumentsOfScenario.Add("By in days", byInDays);
            argumentsOfScenario.Add("nick name", nickName);
            argumentsOfScenario.Add("card holder name", cardHolderName);
            argumentsOfScenario.Add("card number", cardNumber);
            argumentsOfScenario.Add("valid thru", validThru);
            argumentsOfScenario.Add("cvv", cvv);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Create new haul request and verify", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 10
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 3
await this.FeatureBackgroundAsync();
#line hidden
#line 11
 await testRunner.WhenAsync("click on setpickup and dropoff location button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 12
 await testRunner.WhenAsync(string.Format("enter zipcode for new Haul Request \"{0}\"", zipcode), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 13
 await testRunner.WhenAsync("click on check button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 14
 await testRunner.WhenAsync("click on select haul type dropdown", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 15
 await testRunner.WhenAsync("select haul type", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 16
 await testRunner.WhenAsync("click on upload photos button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 17
 await testRunner.WhenAsync("click on upload from gallery", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 18
 await testRunner.WhenAsync("click on elipsis", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 19
 await testRunner.WhenAsync("click on browse", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 20
 await testRunner.WhenAsync("click on roots", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 21
 await testRunner.WhenAsync("click on downloads", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 22
 await testRunner.WhenAsync("click on first image", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 24
 await testRunner.WhenAsync(string.Format("describe the items \"{0}\"", describeItems), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 25
 await testRunner.WhenAsync("select the require packing option", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 26
 await testRunner.WhenAsync("select the require packing material option", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 27
 await testRunner.WhenAsync("select the who will handle the heavy items option", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 28
 await testRunner.WhenAsync("check the request assembly option", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 29
 await testRunner.WhenAsync("check the request disassembly option", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 30
 await testRunner.WhenAsync(string.Format("enter additianl info \"{0}\"", additionalInfo), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 31
 await testRunner.WhenAsync("click on continue button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 32
 await testRunner.WhenAsync("click on pickup address", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 33
 await testRunner.WhenAsync(string.Format("enter the address \"{0}\"", pickupAddress), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 34
 await testRunner.WhenAsync(string.Format("select the entered address \"{0}\"", pickupAddress), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 35
 await testRunner.WhenAsync("click on continue button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 36
 await testRunner.WhenAsync("click on select address type dropdown", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 37
 await testRunner.WhenAsync("select address type", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 38
 await testRunner.WhenAsync(string.Format("enter number of floors \"{0}\"", numberOfFloors), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 39
 await testRunner.WhenAsync(string.Format("enter save address as \"{0}\"", addressAs), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 40
 await testRunner.WhenAsync(string.Format("enter contact name \"{0}\"", contactName), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 41
 await testRunner.WhenAsync(string.Format("enter contact number \"{0}\"", contactNumber), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 42
 await testRunner.WhenAsync(string.Format("enter  building or unit number \"{0}\"", buildingNumber), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 43
 await testRunner.WhenAsync(string.Format("enter apartment number \"{0}\"", apartmentNumber), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 44
 await testRunner.WhenAsync(string.Format("enter floor number \"{0}\"", floorNumber), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 45
 await testRunner.WhenAsync("Select elevator accessibility option", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 46
 await testRunner.WhenAsync(string.Format("enter additianl info \"{0}\"", additionalInfo), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 47
 await testRunner.WhenAsync("click on continue button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 48
 await testRunner.WhenAsync("click on dropoff address", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 49
 await testRunner.WhenAsync(string.Format("enter the address \"{0}\"", dropoffAddress), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 50
 await testRunner.WhenAsync(string.Format("select the entered address \"{0}\"", dropoffAddress), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 51
 await testRunner.WhenAsync("click on select the address type dropdown for dropoff", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 52
 await testRunner.WhenAsync("select the address type for dropoff", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 53
 await testRunner.WhenAsync(string.Format("enter number of floors \"{0}\"", numberOfFloors), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 54
 await testRunner.WhenAsync(string.Format("enter save address as \"{0}\"", addressAs), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 55
 await testRunner.WhenAsync(string.Format("enter contact name \"{0}\"", contactName), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 56
 await testRunner.WhenAsync(string.Format("enter  building or unit number \"{0}\"", buildingNumber), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 57
 await testRunner.WhenAsync(string.Format("enter apartment number \"{0}\"", apartmentNumber), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 58
 await testRunner.WhenAsync(string.Format("enter floor number \"{0}\"", floorNumber), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 59
 await testRunner.WhenAsync("Select elevator accessibility option", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 60
 await testRunner.WhenAsync(string.Format("enter additianl info \"{0}\"", additionalInfo), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 61
 await testRunner.WhenAsync("click on continue button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 62
 await testRunner.WhenAsync("click on pickup date field", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 63
 await testRunner.WhenAsync(string.Format("selec the date \"{0}\"", date), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 64
 await testRunner.WhenAsync("click on ok", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 65
 await testRunner.WhenAsync("check the i\'m flxible with date", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 66
 await testRunner.WhenAsync(string.Format("enter By in days \"{0}\"", byInDays), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 67
 await testRunner.WhenAsync("select the between time", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 68
 await testRunner.WhenAsync("click on ok", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 69
 await testRunner.WhenAsync("selec the and time", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 70
 await testRunner.WhenAsync("click on ok", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 71
 await testRunner.WhenAsync("When click on continue button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 72
 await testRunner.WhenAsync("click on choose payment method button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 73
 await testRunner.WhenAsync("click on  add card button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 74
 await testRunner.WhenAsync(string.Format("enter card nick name \"{0}\"", nickName), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 75
 await testRunner.WhenAsync(string.Format("enter card holder name \"{0}\"", cardHolderName), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 76
 await testRunner.WhenAsync(string.Format("enter card number \"{0}\"", cardNumber), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 77
 await testRunner.WhenAsync(string.Format("enter valid thru \"{0}\"", validThru), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 78
 await testRunner.WhenAsync(string.Format("enter cvv or cvc \"{0}\"", cvv), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 79
 await testRunner.WhenAsync("click on billing is same as mailing address", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 80
 await testRunner.WhenAsync("save card button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 81
 await testRunner.WhenAsync("select the card", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 82
 await testRunner.WhenAsync("click on submit for bids button", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 83
 await testRunner.WhenAsync("click on ok", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 84
 await testRunner.ThenAsync("verify that awaiting bis status is displayed", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
    }
}
#pragma warning restore
#endregion
